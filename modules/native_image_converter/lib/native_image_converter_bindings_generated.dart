// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `src/native_image_converter.h`.
///
/// Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
///
class NativeImageConverterBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeImageConverterBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeImageConverterBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// Function to convert YUV420 data to RGBA.
  ///
  /// This function converts YUV420 formatted image data to RGBA format.
  /// It takes pointers to the YUV420 data and an allocated RGBA buffer,
  /// along with the image width and height.
  void yuv420_to_rgba(
    ffi.Pointer<ffi.Uint8> yuvData,
    ffi.Pointer<ffi.Uint8> rgbaData,
    int width,
    int height,
  ) {
    return _yuv420_to_rgba(
      yuvData,
      rgbaData,
      width,
      height,
    );
  }

  late final _yuv420_to_rgbaPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
            ffi.Pointer<ffi.Uint8>,
            ffi.Pointer<ffi.Uint8>,
            ffi.Int,
            ffi.Int,
          )>>('yuv420_to_rgba');

  late final _yuv420_to_rgba = _yuv420_to_rgbaPtr.asFunction<
      void Function(
        ffi.Pointer<ffi.Uint8>,
        ffi.Pointer<ffi.Uint8>,
        int,
        int,
      )>();
}
